// Generated by view binder compiler. Do not edit!
package com.example.garbage_v3.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.garbage_v3.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAddNewItemBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button addNewItemButton;

  @NonNull
  public final EditText addNewItemText;

  @NonNull
  public final EditText addWhereToSortNewItemText;

  @NonNull
  public final ConstraintLayout main;

  @NonNull
  public final TextView newItemToSortTitle;

  @NonNull
  public final TextView notificationItemAdded;

  @NonNull
  public final TextView whereToSortTitle;

  private ActivityAddNewItemBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button addNewItemButton, @NonNull EditText addNewItemText,
      @NonNull EditText addWhereToSortNewItemText, @NonNull ConstraintLayout main,
      @NonNull TextView newItemToSortTitle, @NonNull TextView notificationItemAdded,
      @NonNull TextView whereToSortTitle) {
    this.rootView = rootView;
    this.addNewItemButton = addNewItemButton;
    this.addNewItemText = addNewItemText;
    this.addWhereToSortNewItemText = addWhereToSortNewItemText;
    this.main = main;
    this.newItemToSortTitle = newItemToSortTitle;
    this.notificationItemAdded = notificationItemAdded;
    this.whereToSortTitle = whereToSortTitle;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAddNewItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAddNewItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_add_new_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAddNewItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.add_new_item_button;
      Button addNewItemButton = ViewBindings.findChildViewById(rootView, id);
      if (addNewItemButton == null) {
        break missingId;
      }

      id = R.id.add_new_item_text;
      EditText addNewItemText = ViewBindings.findChildViewById(rootView, id);
      if (addNewItemText == null) {
        break missingId;
      }

      id = R.id.add_where_to_sort_new_item_text;
      EditText addWhereToSortNewItemText = ViewBindings.findChildViewById(rootView, id);
      if (addWhereToSortNewItemText == null) {
        break missingId;
      }

      ConstraintLayout main = (ConstraintLayout) rootView;

      id = R.id.new_item_to_sort_title;
      TextView newItemToSortTitle = ViewBindings.findChildViewById(rootView, id);
      if (newItemToSortTitle == null) {
        break missingId;
      }

      id = R.id.notification_item_added;
      TextView notificationItemAdded = ViewBindings.findChildViewById(rootView, id);
      if (notificationItemAdded == null) {
        break missingId;
      }

      id = R.id.where_to_sort_title;
      TextView whereToSortTitle = ViewBindings.findChildViewById(rootView, id);
      if (whereToSortTitle == null) {
        break missingId;
      }

      return new ActivityAddNewItemBinding((ConstraintLayout) rootView, addNewItemButton,
          addNewItemText, addWhereToSortNewItemText, main, newItemToSortTitle,
          notificationItemAdded, whereToSortTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
